# Docker Compose configuration for Lawyer Agentic Platform
# Supports both development and production deployments

version: '3.8'

services:
  # Main API service
  lawyer-agentic-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development  # Use development stage for local dev
    container_name: lawyer-agentic-api
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=info
      - DATABASE_URL=postgresql://lawyeragent:lawyeragent123@postgres:5432/lawyeragent
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    volumes:
      # Mount source code for development hot reload
      - ./src:/app/src:ro
      - ./scripts:/app/scripts:ro
      - api-logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - lawyer-agentic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: lawyer-agentic-postgres
    environment:
      POSTGRES_USER: lawyeragent
      POSTGRES_PASSWORD: lawyeragent123
      POSTGRES_DB: lawyeragent
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"  # Expose for external connections during development
    networks:
      - lawyer-agentic-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lawyeragent -d lawyeragent"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and job queues
  redis:
    image: redis:7-alpine
    container_name: lawyer-agentic-redis
    ports:
      - "6379:6379"  # Expose for external connections during development
    volumes:
      - redis-data:/data
      - ./docker/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - lawyer-agentic-network
    restart: unless-stopped
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: lawyer-agentic-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - lawyer-agentic-api
    networks:
      - lawyer-agentic-network
    restart: unless-stopped
    profiles:
      - production

# Named volumes for data persistence
volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  api-logs:
    driver: local
  nginx-logs:
    driver: local

# Custom network for service communication
networks:
  lawyer-agentic-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16